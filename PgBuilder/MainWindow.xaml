<Window x:Class="PgBuilder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:PgBuilder"
        xmlns:object="clr-namespace:PgJsonObjects;assembly=PgJsonObjects"
        xmlns:win="clr-namespace:System.Windows;assembly=PresentationCore"
        xmlns:conv="clr-namespace:Converters;assembly=XamlConverterLibrary"
        xmlns:localconv="clr-namespace:Converters"
        xmlns:localsel="clr-namespace:Selectors"
        Title="{Binding TitleText}"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <conv:BooleanToObjectConverter x:Key="convBooleanToObject"/>
        <conv:NullToObjectConverter x:Key="convNullToObject"/>
        <localconv:AbilityToIconConverter x:Key="convAbilityToIcon"/>
        <localconv:ItemToIconConverter x:Key="convItemToIcon"/>
        <localsel:ItemEffectTemplateSelector x:Key="selItemEffectTemplate"/>
        <RoutedCommand x:Key="AddModCommand"/>
        <RoutedCommand x:Key="IncrementTierCommand"/>
        <RoutedCommand x:Key="DecrementTierCommand"/>
        <RoutedCommand x:Key="MoveDownCommand"/>
        <RoutedCommand x:Key="MoveUpCommand"/>
        <RoutedCommand x:Key="LoadCommand"/>
        <RoutedCommand x:Key="SaveCommand"/>
        <RoutedCommand x:Key="ClearItemCommand"/>
        <RoutedCommand x:Key="ClearModCommand"/>
        <CompositeCollection x:Key="CollapsedVisible">
            <win:Visibility>Collapsed</win:Visibility>
            <win:Visibility>Visible</win:Visibility>
        </CompositeCollection>
        <CompositeCollection x:Key="RedGreenWhite">
            <SolidColorBrush>Red</SolidColorBrush>
            <SolidColorBrush>LightGreen</SolidColorBrush>
            <SolidColorBrush>White</SolidColorBrush>
        </CompositeCollection>
        <CompositeCollection x:Key="GreenRedWhite">
            <SolidColorBrush>LightGreen</SolidColorBrush>
            <SolidColorBrush>Red</SolidColorBrush>
            <SolidColorBrush>White</SolidColorBrush>
        </CompositeCollection>
        <BitmapImage x:Key="imgRemove" UriSource="/PgBuilder;component/Resources/remove.png"/>
        <BitmapImage x:Key="imgBasicAttack" UriSource="/PgBuilder;component/Resources/basic_attack.png"/>
        <ContextMenu x:Key="AbilityContextMenu"/>
        <DataTemplate x:Key="SkillTemplate" DataType="{x:Type object:PgSkill}">
            <TextBlock Text="{Binding Name}"/>
        </DataTemplate>
        <DataTemplate x:Key="ItemNameTemplate" DataType="{x:Type local:ItemInfo}">
            <TextBlock Text="{Binding ItemName}"/>
        </DataTemplate>
        <DataTemplate x:Key="ModNameTemplate" DataType="{x:Type local:Power}">
            <TextBox Text="{Binding Name, Mode=OneWay}" IsReadOnly="True" BorderThickness="0" Background="Transparent" TextWrapping="Wrap" IsHitTestVisible="False" VerticalAlignment="Center" Margin="5,0,0,0"/>
        </DataTemplate>
        <DataTemplate x:Key="ItemSimpleEffectTemplate" DataType="{x:Type object:IPgItemSimpleEffect}">
            <TextBox Text="{Binding Description, Mode=OneWay}" IsReadOnly="True" BorderThickness="0" Foreground="White" Background="Transparent" TextWrapping="Wrap" IsHitTestVisible="False" VerticalAlignment="Center" Margin="5,1,0,1"/>
        </DataTemplate>
        <DataTemplate x:Key="ItemAttributeLinkTemplate" DataType="{x:Type object:IPgItemAttributeLink}">
            <TextBox Text="{Binding FriendlyNameAndEffect, Mode=OneWay}" IsReadOnly="True" BorderThickness="0" Foreground="White" Background="Transparent" TextWrapping="Wrap" IsHitTestVisible="False" VerticalAlignment="Center" Margin="5,1,0,1"/>
        </DataTemplate>
        <DataTemplate x:Key="OtherEffectTemplate">
            <DockPanel>
                <TextBlock DockPanel.Dock="Left" Foreground="White" Margin="0,0,5,0">•</TextBlock>
                <TextBlock Text="{Binding Desc}" Foreground="LightGreen" FontWeight="Bold" TextWrapping="Wrap"/>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="AbilitySlotTemplate" DataType="{x:Type local:AbilitySlot}">
            <DataTemplate.Resources>
                <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="HasDropShadow" Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ControlTemplate.Resources>
                                    <Style x:Key="{x:Type TextBlock}" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Foreground" Value="White"/>
                                    </Style>
                                </ControlTemplate.Resources>
                                <DockPanel Visibility="{Binding AbilityName, Converter={StaticResource convNullToObject}, ConverterParameter={StaticResource CollapsedVisible}}" Background="Black" Width="350">
                                    <DockPanel DockPanel.Dock="Top" Margin="5,5,5,0">
                                        <Image Source="{Binding Ability, Converter={StaticResource convAbilityToIcon}}" Width="64" Height="64" Margin="0,0,5,0"/>
                                        <TextBlock Text="{Binding AbilityName}" TextWrapping="Wrap" FontWeight="Bold" Foreground="Yellow" FontSize="24" Margin="2,0,0,0"/>
                                    </DockPanel>
                                    <TextBlock DockPanel.Dock="Top" Text="{Binding AbilityDescription}" TextWrapping="Wrap" TextAlignment="Left" Margin="5,5,5,0"/>
                                    <ItemsControl ItemsSource="{Binding OtherEffectList}" ItemTemplate="{StaticResource OtherEffectTemplate}" DockPanel.Dock="Bottom"/>
                                    <StackPanel Margin="5,5,5,0">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontWeight="Bold">Min Level:</TextBlock>
                                            <TextBlock Text="{Binding AbilityMinLevel}" Foreground="{Binding AbilityMinLevelModified, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource RedGreenWhite}}" Margin="5,0,0,0"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding PowerCost.HasValue, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource CollapsedVisible}}">
                                            <TextBlock FontWeight="Bold">Power Cost:</TextBlock>
                                            <TextBlock Text="{Binding PowerCost.AsString}" Foreground="{Binding PowerCost.IsModified, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource GreenRedWhite}}" Margin="5,0,0,0"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontWeight="Bold">Reuse Time:</TextBlock>
                                            <TextBlock Text="{Binding ResetTime.AsString}" Foreground="{Binding ResetTime.IsModified, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource GreenRedWhite}}" Margin="5,0,0,0"/>
                                            <TextBlock Margin="5,0,0,0">seconds</TextBlock>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding Range.HasValue, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource CollapsedVisible}}">
                                            <TextBlock FontWeight="Bold">Range:</TextBlock>
                                            <TextBlock Text="{Binding Range.AsString}" Foreground="{Binding Range.IsModified, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource RedGreenWhite}}" Margin="5,0,0,0"/>
                                            <TextBlock Margin="5,0,0,0">meters</TextBlock>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding HasAbilityDamage, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource CollapsedVisible}}">
                                            <TextBlock FontWeight="Bold">Damage:</TextBlock>
                                            <TextBlock Text="{Binding AbilityDamage}" Foreground="{Binding AbilityDamageModified, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource RedGreenWhite}}" Margin="5,0,0,0"/>
                                            <TextBlock Text="{Binding AbilityDamageType}" Foreground="{Binding AbilityDamageTypeModified, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource RedGreenWhite}}" Margin="5,0,0,0"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding HasAbilityDamageVulnerable, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource CollapsedVisible}}">
                                            <TextBlock FontWeight="Bold">Extra Dmg To Vulnerable Targets:</TextBlock>
                                            <TextBlock Text="{Binding AbilityDamageVulnerable}" Foreground="{Binding AbilityDamageVulnerableModified, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource RedGreenWhite}}" Margin="5,0,0,0"/>
                                            <TextBlock Text="{Binding AbilityDamageType}" Foreground="{Binding AbilityDamageTypeModified, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource RedGreenWhite}}" Margin="5,0,0,0"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding RageBoost.HasValue, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource CollapsedVisible}}">
                                            <TextBlock FontWeight="Bold">Reduces Rage:</TextBlock>
                                            <TextBlock Text="{Binding RageBoost.AsString}" Foreground="{Binding RageBoost.IsModified, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource RedGreenWhite}}" Margin="5,0,0,0"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding RageMultiplier.HasValue, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource CollapsedVisible}}">
                                            <TextBlock FontWeight="Bold">Enrages Target:</TextBlock>
                                            <TextBlock Text="{Binding RageMultiplier.AsString}" Foreground="{Binding RageMultiplier.IsModified, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource GreenRedWhite}}" Margin="5,0,0,0"/>
                                            <TextBlock>%</TextBlock>
                                        </StackPanel>
                                        <TextBlock FontWeight="Bold" Visibility="{Binding IsEpicAttack, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource CollapsedVisible}}">This is an Epic Attack.</TextBlock>
                                        <StackPanel Visibility="{Binding IsBasicAttack, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource CollapsedVisible}}">
                                            <TextBlock FontWeight="Bold">This is a Basic Attack.</TextBlock>
                                            <DockPanel>
                                                <Image DockPanel.Dock="Left" Source="{StaticResource imgBasicAttack}" Width="64" Height="64"/>
                                                <StackPanel Margin="10,0,0,0">
                                                    <TextBlock TextWrapping="Wrap">Once every 15s, Basic Attacks generate a Combat Refresh that restores:</TextBlock>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="0,0,5,0">•</TextBlock>
                                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding BasicAttackHealth}" TextAlignment="Right"/>
                                                        <TextBlock Grid.Row="0" Grid.Column="2" Margin="5,0,0,0">Health</TextBlock>
                                                        <TextBlock Grid.Row="1" Grid.Column="0" Margin="0,0,5,0">•</TextBlock>
                                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding BasicAttackArmor}" TextAlignment="Right"/>
                                                        <TextBlock Grid.Row="1" Grid.Column="2" Margin="5,0,0,0">Armor</TextBlock>
                                                        <TextBlock Grid.Row="2" Grid.Column="0" Margin="0,0,5,0">•</TextBlock>
                                                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding BasicAttackPower}" TextAlignment="Right"/>
                                                        <TextBlock Grid.Row="2" Grid.Column="2" Margin="5,0,0,0">Power</TextBlock>
                                                    </Grid>
                                                </StackPanel>
                                            </DockPanel>
                                        </StackPanel>
                                        <TextBlock FontWeight="Bold">Other Effects:</TextBlock>
                                    </StackPanel>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataTemplate.Resources>
            <Image Source="{Binding Source}" ContextMenu="{StaticResource AbilityContextMenu}" ToolTip="{Binding Path=DataContext, RelativeSource={RelativeSource Self}}" ContextMenuOpening="OnAbilityContextMenuOpening" Width="32" Height="32" Margin="5,0,5,0"/>
        </DataTemplate>
        <DataTemplate x:Key="GearSlotTemplate" DataType="{x:Type local:GearSlot}">
            <TextBlock Text="{Binding Name}"/>
        </DataTemplate>
        <DataTemplate x:Key="ModTemplate" DataType="{x:Type local:Mod}">
            <DockPanel Background="White">
                <Button DockPanel.Dock="Left" Command="{StaticResource IncrementTierCommand}" VerticalAlignment="Top" Width="20">+</Button>
                <Button DockPanel.Dock="Left" Command="{StaticResource DecrementTierCommand}" VerticalAlignment="Top" Width="20" Margin="2,0,0,0">-</Button>
                <Button DockPanel.Dock="Left" Command="{StaticResource MoveDownCommand}" VerticalAlignment="Top" Width="20" Margin="2,0,0,0">↓</Button>
                <Button DockPanel.Dock="Left" Command="{StaticResource MoveUpCommand}" VerticalAlignment="Top" Width="20" Margin="2,0,0,0">↑</Button>
                <Button DockPanel.Dock="Right" Command="{StaticResource ClearModCommand}" VerticalAlignment="Center" Margin="5,0,0,0">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Source="{StaticResource imgRemove}" Width="16" Height="16"/>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <ComboBox ItemsSource="{Binding AvailablePowerList}" ItemTemplate="{StaticResource ModNameTemplate}" SelectedIndex="{Binding SelectedPowerIndex, Mode=OneWay}" IsReadOnly="True" SelectionChanged="OnPowerSelectionChanged" VerticalAlignment="Center" Margin="5,0,0,0"/>
            </DockPanel>
        </DataTemplate>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource AddModCommand}" CanExecute="CanAddMod" Executed="OnAddMod"/>
        <CommandBinding Command="{StaticResource IncrementTierCommand}" Executed="OnIncrementTier"/>
        <CommandBinding Command="{StaticResource DecrementTierCommand}" Executed="OnDecrementTier"/>
        <CommandBinding Command="{StaticResource MoveDownCommand}" Executed="OnMoveDown"/>
        <CommandBinding Command="{StaticResource MoveUpCommand}" Executed="OnMoveUp"/>
        <CommandBinding Command="{StaticResource LoadCommand}" Executed="OnLoad"/>
        <CommandBinding Command="{StaticResource SaveCommand}" Executed="OnSave"/>
        <CommandBinding Command="{StaticResource ClearItemCommand}" Executed="OnClearItem"/>
        <CommandBinding Command="{StaticResource ClearModCommand}" Executed="OnClearMod"/>
    </Window.CommandBindings>
    <DockPanel Margin="0,10,0,0">
        <DockPanel DockPanel.Dock="Top">
            <StackPanel DockPanel.Dock="Right">
                <Button Width="60" Height="20" Command="{StaticResource LoadCommand}" Margin="10,0,10,10">Load...</Button>
                <Button Width="60" Height="20" Command="{StaticResource SaveCommand}" Margin="10,0,10,10">Save...</Button>
            </StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" TextAlignment="Right" VerticalAlignment="Center" Margin="10,0,0,5">Primary Skill:</TextBlock>
                <TextBlock Grid.Column="0" Grid.Row="1" TextAlignment="Right" VerticalAlignment="Center" Margin="10,0,0,5">Secondary Skill:</TextBlock>
                <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding SkillList}" ItemTemplate="{StaticResource SkillTemplate}" SelectedIndex="{Binding SelectedSkill1, Mode=OneWay}" IsReadOnly="True" SelectionChanged="OnSkillSelectionChanged1" VerticalAlignment="Center" Width="120" Margin="5,0,0,5"/>
                <ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding SkillList}" ItemTemplate="{StaticResource SkillTemplate}" SelectedIndex="{Binding SelectedSkill2, Mode=OneWay}" IsReadOnly="True" SelectionChanged="OnSkillSelectionChanged2" VerticalAlignment="Center" Width="120" Margin="5,0,0,5"/>
                <ItemsControl Grid.Column="2" Grid.Row="0" ItemsSource="{Binding AbilitySlot1List}" ItemTemplate="{StaticResource AbilitySlotTemplate}" VerticalAlignment="Center" Margin="5,0,0,5">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <ItemsControl Grid.Column="2" Grid.Row="1" ItemsSource="{Binding AbilitySlot2List}" ItemTemplate="{StaticResource AbilitySlotTemplate}" VerticalAlignment="Center" Margin="5,0,0,5">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>
        </DockPanel>
        <TabControl DockPanel.Dock="Top" ItemsSource="{Binding GearSlotList}" ItemTemplate="{StaticResource GearSlotTemplate}" SelectedIndex="0" Margin="10,10,10,10">
            <TabControl.ContentTemplate>
                <ItemContainerTemplate>
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top" Margin="0,10,0,0">
                            <DockPanel DockPanel.Dock="Left" VerticalAlignment="Top" Margin="10,0,0,10">
                                <Button DockPanel.Dock="Right" Command="{StaticResource ClearItemCommand}" VerticalAlignment="Center" Margin="5,0,0,0">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Image Source="{StaticResource imgRemove}" Width="16" Height="16"/>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <Grid>
                                    <Grid.Resources>
                                        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
                                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                                            <Setter Property="HasDropShadow" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <ControlTemplate.Resources>
                                                            <Style x:Key="{x:Type TextBlock}" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                                <Setter Property="Foreground" Value="White"/>
                                                            </Style>
                                                        </ControlTemplate.Resources>
                                                        <DockPanel Visibility="{Binding SelectedItem, Converter={StaticResource convNullToObject}, ConverterParameter={StaticResource CollapsedVisible}}" Background="Black">
                                                            <DockPanel DockPanel.Dock="Top" Margin="5,5,5,0">
                                                                <Image Source="{Binding SelectedItem.Item, Converter={StaticResource convItemToIcon}}" Width="64" Height="64" Margin="0,0,5,0"/>
                                                                <TextBlock Text="{Binding SelectedItem.ItemName}" FontWeight="Bold" Foreground="Yellow" FontSize="24" Margin="2,0,0,0"/>
                                                            </DockPanel>
                                                            <TextBlock DockPanel.Dock="Top" Text="{Binding SelectedItem.ItemDescription}" TextWrapping="Wrap" TextAlignment="Left" MaxWidth="200" Margin="5,5,5,0"/>
                                                            <ItemsControl ItemsSource="{Binding SelectedItem.ItemEffectDescriptionList}" ItemTemplateSelector="{StaticResource selItemEffectTemplate}" Margin="5,5,5,5"/>
                                                        </DockPanel>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Grid.Resources>
                                    <ComboBox ItemsSource="{Binding ItemList}" ItemTemplate="{StaticResource ItemNameTemplate}" SelectedIndex="{Binding SelectedItemIndex, Mode=OneWay}" ToolTip="{Binding Path=SelectedItem}" IsReadOnly="True" SelectionChanged="OnItemSelectionChanged" VerticalAlignment="Center" Width="200"/>
                                </Grid>
                            </DockPanel>
                            <Grid Width="400" Margin="10,0,10,0">
                                <Grid VerticalAlignment="Top">
                                    <TextBlock Text="To add mods, click this button." TextAlignment="Right" VerticalAlignment="Center"/>
                                    <Button Width="0" VerticalAlignment="Center"/>
                                </Grid>
                                <ItemsControl ItemsSource="{Binding ModList}" ItemTemplate="{StaticResource ModTemplate}" VerticalAlignment="Top"/>
                            </Grid>
                            <Button DockPanel.Dock="Right" Command="{StaticResource AddModCommand}" VerticalAlignment="Top" Width="60" Margin="0,0,10,10">Add Mod</Button>
                        </DockPanel>
                        <Grid/>
                    </DockPanel>
                </ItemContainerTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
        <Grid/>
    </DockPanel>
</Window>
